[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "serp-forge"
dynamic = ["version"]
description = "Advanced web scraping solution powered by Serper API with anti-detection capabilities"
readme = "readme.md"
license = {text = "MIT"}
authors = [
    {name = "Serp Forge Team", email = "team@serp-forge.com"}
]
maintainers = [
    {name = "Serp Forge Team", email = "team@serp-forge.com"}
]
keywords = ["web scraping", "serper", "anti-detection", "content extraction", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.8.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "lxml>=4.9.0",
    "cssselect>=1.2.0",
    "fake-useragent>=1.4.0",
    "tenacity>=8.2.0",
    "pyyaml>=6.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "tqdm>=4.65.0",
    "asyncio-throttle>=1.0.0",
    "aiofiles>=23.0.0",
    "httpx>=0.24.0",
    "selenium>=4.10.0",
    "webdriver-manager>=4.0.0",
    "playwright>=1.35.0",
    "scrapy>=2.8.0",
    "scrapy-playwright>=0.0.34",
    "scrapy-splash>=0.8.0",
    "scrapy-rotating-proxies>=0.6.0",
    "scrapy-user-agents>=0.1.1",
    "scrapy-fake-useragent>=1.4.4",
    "scrapy-proxy-pool>=0.1.9",
    "scrapy-crawlera>=1.2.0",
    "trafilatura>=2.0.0",
    "newspaper3k>=0.2.8",
    "readability-lxml>=0.8.1",
    "nltk>=3.8.0",
    "textblob>=0.17.0",
    "structlog>=23.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
dashboard = [
    "streamlit>=1.28.0",
    "plotly>=5.15.0",
    "pandas>=2.0.0",
]

[project.scripts]
serp-forge = "serp_forge.cli:main"
serp-dashboard = "serp_forge.dashboard.main:main"

[project.urls]
Homepage = "https://github.com/vishalm/serp-forge"
Documentation = "https://serp-forge.readthedocs.io"
Repository = "https://github.com/vishalm/serp-forge"
Issues = "https://github.com/vishalm/serp-forge/issues"

[tool.setuptools.packages.find]
include = ["serp_forge*"]

[tool.setuptools.package-data]
serp_forge = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["serp_forge"]
known_third_party = ["requests", "beautifulsoup4", "pydantic", "aiohttp"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["serp_forge"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "requests.*",
    "beautifulsoup4.*",
    "aiohttp.*",
    "selenium.*",
    "playwright.*",
    "scrapy.*",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    "venv",
    ".pytest_cache",
    "htmlcov",
]

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-args = 10
max-attributes = 10
max-bool-expr = 5
max-branches = 12
max-locals = 15
max-parents = 7
max-public-methods = 20
max-returns = 6
max-statements = 50

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.safety]
policy = "strict" 